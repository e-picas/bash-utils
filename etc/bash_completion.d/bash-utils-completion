#!/usr/bin/env bash
#
# bash-utils - A *bash* library for better scripting
# <http://gitlab.com/piwi/bash-utils>
# Copyright (c) 2015 Pierre Cassat & contributors
#
# Licensed under the Apache Software Foundation license, Version 2.0;
# you may not use this file except in compliance with the License.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For sources & updates, see <http://gitlab.com/piwi/bash-utils>.
#
# To transmit bugs, see <http://gitlab.com/piwi/bash-utils/issues>.
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code or see
# <http://www.apache.org/licenses/LICENSE-2.0>.
#
#set -eETu

export COMPMODULE

_bashutils()
{
    local cur prev opts fullopts actions actions_on_modules action_on_module modules applibexec compwords curtmp first
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    applibexec="$(command -v bash-utils)"
    [ -z "$COMPMODULE" ] || applibexec+=" $COMPMODULE";
    shortopts="$(${applibexec} completion short_options)"
    longopts="$(${applibexec} completion long_options)"
    actions="$(${applibexec} completion actions)"
    actions_on_modules="$(${applibexec} completion actions_on_modules)"
    modules="$(${applibexec} completion modules)"

    # rebuild compwords
    compwords=()
    for (( i=1; i<=${#COMP_WORDS[@]}; i++ )); do
        curtmp="${COMP_WORDS[$i]:-}"
        if [ -n "${curtmp}" ] && [[ "${curtmp}" != -* ]]; then
            compwords[${#compwords[*]}]="$curtmp"
        fi
    done
    first="${compwords[0]:-}"

    # options
    if [[ "${cur}" == -* ]]; then
        COMPREPLY=( $(compgen -W "${shortopts} ${longopts}" -- "${cur}") )
        return 0

    # actions + modules listing
    elif (
        ( [ -n "$cur" ] && [ ${#compwords[@]} -eq 1 ] ) ||
        ( [ -z "$cur" ] && [ ${#compwords[@]} -eq 0 ] )
    ); then
        COMPREPLY=( $(compgen -W "${actions} ${modules}" -- "${cur}") )
        return 0

    # modules listing
    elif (
        [ -n "$first" ] && (
            ( [ -n "$cur" ] && [ ${#compwords[@]} -eq 2 ] ) ||
            ( [ -z "$cur" ] && [ ${#compwords[@]} -eq 1 ] )
        ) && (echo "$actions_on_modules" | grep "$first" 2>&1 1>/dev/null)
    ); then
        COMPREPLY=( $(compgen -W "${modules}" -- "${cur}") )
        return 0

    fi

    # fallback to classic completion
    return 1
}
complete -o default -F _bashutils bash-utils

_bashutils_model()
{
    export COMPMODULE='model'
    _bashutils
    return $?
}
complete -o default -F _bashutils_model model

# vim: autoindent tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=sh
