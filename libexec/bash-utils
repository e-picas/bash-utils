#!/usr/bin/env bash
#
# bash-utils - A *bash* library for better scripting
# <http://gitlab.com/piwi/bash-utils>
# Copyright (c) 2015 Pierre Cassat & contributors
#
# Licensed under the Apache Software Foundation license, Version 2.0;
# you may not use this file except in compliance with the License.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For sources & updates, see <http://gitlab.com/piwi/bash-utils>.
#
# To transmit bugs, see <http://gitlab.com/piwi/bash-utils/issues>.
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code or see
# <http://www.apache.org/licenses/LICENSE-2.0>.
#
set -e

# include required lib & load bash-utils env
getapplibexec() {
    local cwd="$(pwd)"
    local path="$1"
    while [ -n "$path" ]; do
        cd "${path%/*}" 2>/dev/null; local name="${path##*/}"; path="$($(type -p greadlink readlink | head -1) "$name" || true)";
    done
    pwd
    cd "$cwd"
}
appfile="$(getapplibexec "${BASH_SOURCE[0]}")/bash-utils-core"
if [ ! -f "$appfile" ]; then echo "> ${BASH_SOURCE[0]}:${LINENO}: required file '$appfile' not found!" >&2; exit 1; fi
source "$appfile"

# transmit the process to called script or module
defaultcmd="${BASH_UTILS_ROOT}/bash-utils-cmd"
cmd=''
if [ $# -gt 0 ] && [ -f "$1" ]; then
    cmd="$1"
    shift
    if (module_exists "$(basename "$cmd")" 2>/dev/null || false); then
        CMD_MODULE="$(basename "$cmd")"
    fi
elif [ $# -gt 0 ] && (module_exists "$1" 2>/dev/null || false); then
    cmd="$(find_module "$1")"
    CMD_MODULE="$1"
    shift
elif [ "$(basename "$0")" = "$(basename "${BASH_SOURCE[0]}")" ]; then
    cmd="$defaultcmd"
fi
[ -n "$CMD_MODULE" ] && load_module_info "$CMD_MODULE";
[ -n "$cmd" ] && [ -f "$cmd" ] && source "$cmd" "$@";

[ "$(basename "$0")" = "$(basename "${BASH_SOURCE[0]}")" ] && exit 0 || return 0;
# vim: autoindent tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=sh
