#!/usr/bin/env bash-utils
#
# This script is a module for Bash-Utils
#
# bash-utils - A *bash* library for better scripting
# <http://gitlab.com/piwi/bash-utils>
# Copyright (c) 2015 Pierre Cassat & contributors
#
# Licensed under the Apache Software Foundation license, Version 2.0;
# you may not use this file except in compliance with the License.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For sources & updates, see <http://gitlab.com/piwi/bash-utils>.
#
# To transmit bugs, see <http://gitlab.com/piwi/bash-utils/issues>.
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code or see
# <http://www.apache.org/licenses/LICENSE-2.0>.
#

#### COLORIZED CONTENTS #############################################################################

# you can define here a string about module's usage (short synopsis), description, name and version
CMD_NAME='Model'
CMD_VERSION='0.0.0'
CMD_USAGE="model <type> [file_path]"
CMD_DESCRIPTION="see one of the bash models contents or copy it in 'file_path'"
CMD_HELP="arguments:
    <type>      model's type in 'bash', 'bash-utils', 'module'
    <file_path> if set, the model will be copied to that file

Use option '--dry-run' with the '<file_path>' argument to see what will be done first.
Use option '--quiet' without a '<file_path>' argument to get the model path.
";
#CMD_OPTS_SHORT=( f q v x V h )
#CMD_OPTS_LONG=( debug dry-run force quiet verbose version help )
#set_env_array CMD_OPTS_SHORT CMD_OPTS_SHORT[@]
#set_env_array CMD_OPTS_LONG CMD_OPTS_LONG[@]

# models
export BASHUTILS_MODEL_DIRS="${BASH_UTILS_MODULES}/models/"
export BASHUTILS_MODEL_BASH="${BASHUTILS_MODEL_DIRS}/bash-model"
export BASHUTILS_MODEL_BASHUTILS="${BASHUTILS_MODEL_DIRS}/bash-utils-model"
export BASHUTILS_MODEL_BASHMODULE="${BASHUTILS_MODEL_DIRS}/bash-utils-module"

## !! REQUIRED !! ## stop here on pre-loading
if ${PRELOAD:-false}; then return 0; fi

#######################
## treat direct params ...

if [ -z "$CMD_MODULE" ]; then
    [ "$(basename "$0")" = "$(basename "${BASH_SOURCE[0]}")" ] && exit 0 || return 0;
fi

[ $# -eq 0 ] && usage_info && exit 1;
rearrange_options "$@"
[ -n "$CMD_REQ" ] && eval set -- "$CMD_REQ";
common_options "$@"
$DEBUG && debug;

while [ $# -gt 0 ]; do
    case "$1" in
        -- ) shift; break;;
        * )  ! is_known_option "$1" && error "unknown option '$1'";;
    esac
    shift
done

[ ! -d "$BASHUTILS_MODEL_DIRS" ] && error "directory '$BASHUTILS_MODEL_DIRS' not found";
type="$1"
target=''
source=''
[ $# -gt 1 ] && target="$2"

case "$type" in
    'bash')         source="$BASHUTILS_MODEL_BASH";;
    'bash-utils')   source="$BASHUTILS_MODEL_BASHUTILS";;
    'bash-utils-module'|'bash-module'|'module')
                    source="$BASHUTILS_MODEL_BASHMODULE"
                    if [ -n "$target" ] && ! $FORCE; then
                        targetfile="$(basename "$target")"
                        if [ "$targetfile" = "$target" ]; then
                            [ -d "$(pwd)/libexec/bash-utils-modules/" ] && \
                                target="$(pwd)/libexec/bash-utils-modules/${target}" || \
                                    target="${BASH_UTILS_MODULES}/${target}";
                        fi
                    fi
                    ;;
    * )             error "undefined model type '$type'";;
esac

[ ! -f "$source" ] && error "model '$source' not found";
if [ -n "$target" ]; then
    if $DRY_RUN; then
        comment "cp '${source/$(pwd)\//}' '${target/$(pwd)\//}' && chmod a+x '${target/$(pwd)\//}'"
    else
        cp "$source" "$target"
        chmod a+x "$target"
        ! $QUIET && echo "$target";
    fi
else
    $QUIET && echo "${source/$(pwd)\//}" || cat "$source";
fi

[ "$(basename "$0")" = "$(basename "${BASH_SOURCE[0]}")" ] && exit 0 || return 0;
## vim default shell setup (must be the very last line):
# vim: autoindent tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=sh
